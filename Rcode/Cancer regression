library(data.table)
library(dplyr)
require(stringi)
require(stringr)

setwd("~/Documents/cenrich/")

## glm (N ~ Germline Variants + PC1 + PC2, family= ''binomial'')
## where: N = case (1) or control (0), Germline Variants = indicating the number of samples that carries rare pathogenic germline variants for each gene-tissue pair, PC values from PCA analysis of PCAWG and 1KG to control population structures were used as an input for the regression. 

inputD <- fread(inputdata, data.table=F)
inputR <- fread(inputinfo, data.table=F)
inputR_N <- inputR[which(inputR$hist == "Normal"),]
calist <- unique(inputR[which(inputR$hist != "Normal"),]$hist)
nrow(inputD) 

RGLM <- function(caa){
  
  print(caa)
  
  inputD_c <- inputD[which(inputD$hist == caa),]
  inputD_n <- inputD[which(inputD$hist == "Normal"),]
  
  inputD_c.gene <- unique(inputD_c$gene)
  inputD_n.gene <- unique(inputD_n$gene)
  inputD.gene <- unique(append(inputD_c.gene, inputD_n.gene))
  print(length(inputD.gene))
  
  inputR <- inputR[which(inputR$hist == caa),]
  inputR2 <- rbind(inputR, inputR_N)
  
  case_add <- as.data.frame(matrix(c("case-fake-sample", mean(inputR2$PC1), mean(inputR2$PC2), 1, "Unknown", caa, 
                                     rep(1, ncol(inputR)-6)), nrow=1), stringsAsFactors=F)
  control_add <- as.data.frame(matrix(c("control-fake-sample", mean(inputR2$PC1), mean(inputR2$PC2), 0, "Unknown", "Normal", 
                                        rep(1, ncol(inputR)-6)), nrow=1), stringsAsFactors=F)
  names(case_add) <- colnames(inputR2)
  names(control_add) <- colnames(inputR2)
  inputR2 <- rbind(inputR2, case_add, control_add)
  print(nrow(inputR2))
  
  inputR2_f <- inputR2[,1:6]
  inputR2_b <- as.data.frame(inputR2[,which(colnames(inputR2) %in% inputD.gene)])
  P.combine <- cbind(inputR2_f, inputR2_b)
  
  P.combine$Ethnicity <- as.factor(P.combine$Ethnicity)
  P.combine[7:ncol(P.combine)] <- lapply(P.combine[7:ncol(P.combine)], as.integer)
  P.combine$PC1 <- as.numeric(P.combine$PC1)
  P.combine$PC2 <- as.numeric(P.combine$PC2)
  
  vglist <- names(P.combine)[7:ncol(P.combine)]
  
  glmmm <- lapply(vglist, function(j) {
    
    { glm.gene <- glm(substitute(type ~ i + PC1 + PC2   , list(i = as.name(j))), data=P.combine, family='binomial')
      
    ###i ( variable: variant carrier / LOH / Disease / Pathway )
    
    }})
  
  glmmm.s <- lapply(glmmm, summary)
  glmmm.s_r <- lapply(glmmm.s, '[[', 'coefficients')
  glmmm.s_r <- mapply(cbind, glmmm.s_r, "hist"=caa, SIMPLIFY=F)
  glmmm.s_tot <- do.call(rbind, glmmm.s_r)
  
  return(glmmm.s_tot)    
}

caEnrich <- lapply(calist, RGLM) %>% rbind.data.frame()
caEnrich$OR <- exp(caEnrich$Estimate)
caEnrich <- caEnrich[order(caEnrich$OR, decreasing = T), ]

caEnrich <- caEnrich[,c(7,5,1,6,4)]

head(caEnrich)
write.table(genev, "Cancer_Enrich.sig.can.table.tsv", sep = "\t")
